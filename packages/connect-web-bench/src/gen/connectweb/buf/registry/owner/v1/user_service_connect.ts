// Copyright 2021-2024 The Connect Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-connect-es v1.7.0 with parameter "ts_nocheck=false,target=ts"
// @generated from file buf/registry/owner/v1/user_service.proto (package buf.registry.owner.v1, syntax proto3)
/* eslint-disable */

import { CreateUsersRequest, CreateUsersResponse, DeleteUsersRequest, DeleteUsersResponse, GetUsersRequest, GetUsersResponse, ListUsersRequest, ListUsersResponse, UpdateUsersRequest, UpdateUsersResponse } from "./user_service_pb.js";
import { MethodIdempotency, MethodKind } from "@bufbuild/protobuf";

/**
 * Operate on Users.
 *
 * @generated from service buf.registry.owner.v1.UserService
 */
export const UserService = {
  typeName: "buf.registry.owner.v1.UserService",
  methods: {
    /**
     * Get Users by id or name.
     *
     * @generated from rpc buf.registry.owner.v1.UserService.GetUsers
     */
    getUsers: {
      name: "GetUsers",
      I: GetUsersRequest,
      O: GetUsersResponse,
      kind: MethodKind.Unary,
      idempotency: MethodIdempotency.NoSideEffects,
    },
    /**
     * List Users, usually by Organization.
     *
     * @generated from rpc buf.registry.owner.v1.UserService.ListUsers
     */
    listUsers: {
      name: "ListUsers",
      I: ListUsersRequest,
      O: ListUsersResponse,
      kind: MethodKind.Unary,
      idempotency: MethodIdempotency.NoSideEffects,
    },
    /**
     * Create new Users.
     *
     * This operation is atomic. Either all Users are created or an error is returned.
     *
     * @generated from rpc buf.registry.owner.v1.UserService.CreateUsers
     */
    createUsers: {
      name: "CreateUsers",
      I: CreateUsersRequest,
      O: CreateUsersResponse,
      kind: MethodKind.Unary,
      idempotency: MethodIdempotency.Idempotent,
    },
    /**
     * Update existing Users.
     *
     * This operation is atomic. Either all Users are updated or an error is returned.
     *
     * @generated from rpc buf.registry.owner.v1.UserService.UpdateUsers
     */
    updateUsers: {
      name: "UpdateUsers",
      I: UpdateUsersRequest,
      O: UpdateUsersResponse,
      kind: MethodKind.Unary,
      idempotency: MethodIdempotency.Idempotent,
    },
    /**
     * Delete existing Users.
     *
     * This operation is atomic. Either all Users are deleted or an error is returned.
     * Duplicate UserRefs are allowed, and only one User will be deleted. Likewise,
     * duplicate UserRefs belonging to the same User, by id or name, are allowed, and
     * only one User will be deleted.
     *
     * @generated from rpc buf.registry.owner.v1.UserService.DeleteUsers
     */
    deleteUsers: {
      name: "DeleteUsers",
      I: DeleteUsersRequest,
      O: DeleteUsersResponse,
      kind: MethodKind.Unary,
      idempotency: MethodIdempotency.Idempotent,
    },
  }
} as const;

